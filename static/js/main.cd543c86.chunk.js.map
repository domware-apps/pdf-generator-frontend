{"version":3,"sources":["App.jsx","index.js"],"names":["API_URL","baseHeaders","accept","App","useState","key","setKey","pdf","setPdf","loading","setLoading","printBackground","setPrintBackground","downloadPdf","useCallback","fetch","method","headers","body","JSON","stringify","data","document","documentElement","innerHTML","replace","options","then","response","blob","a","createElement","href","URL","createObjectURL","setAttribute","click","catch","err","console","error","generatePdf","output","type","json","log","className","value","onChange","e","target","onClick","disabled","checked","src","ReactDOM","render","getElementById"],"mappings":"yKAIMA,G,MAAO,kBADU,kCAGjBC,EAAc,CAClB,eAAgB,mBAChBC,OAAQ,mBACR,kBANqB,iCAoIRC,EA3HH,WAAO,IAAD,EACMC,mBAAS,IADf,mBACTC,EADS,KACJC,EADI,OAEMF,mBAAS,MAFf,mBAETG,EAFS,KAEJC,EAFI,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAI8BN,oBAAS,GAJvC,mBAITO,EAJS,KAIQC,EAJR,KAMVC,EAAcC,uBAAY,WAC9BJ,GAAW,GACXK,MAAM,GAAD,OAAIf,EAAJ,SAAoB,CACvBgB,OAAQ,OACRC,QAAQ,eAAMhB,EAAP,CAAoB,iBAAkBI,IAC7Ca,KAAMC,KAAKC,UAAU,CACnBC,KAAMC,SAASC,gBAAgBC,UAAUC,QAAQ,KAAM,IACvDC,QAAS,CACPf,uBAIHgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACJ,IAAIE,EAAIR,SAASS,cAAc,KAC/BD,EAAEE,KAAOC,IAAIC,gBAAgBN,GAC7BE,EAAEK,aAAa,WAAY,YAC3BL,EAAEM,QACF1B,GAAW,MAEZ2B,OAAM,SAAAC,GACLC,QAAQC,MAAM,8BAA+BF,QAEhD,CAAC3B,EAAiBN,IAEfoC,EAAc3B,uBAAY,WAC9BJ,GAAW,GACXK,MAAM,GAAD,OAAIf,EAAJ,SAAoB,CACvBgB,OAAQ,OACRC,QAAQ,eAAMhB,EAAP,CAAoB,iBAAkBI,IAC7Ca,KAAMC,KAAKC,UAAU,CACnBC,KAAMC,SAASC,gBAAgBC,UAAUC,QAAQ,KAAM,IACvDC,QAAS,CACPgB,OAAQ,CACNC,KAAM,UAERhC,uBAIHgB,MAAK,SAAAC,GAAQ,OAAIA,EAASgB,UAC1BjB,MAAK,SAAAC,GACJW,QAAQM,IAAI,eAAgBjB,GADZ,IAGFc,EACVd,EADFA,SAAYc,OAEdlC,EAAOkC,GACPhC,GAAW,MAEZ2B,OAAM,SAAAC,GACLC,QAAQC,MAAM,8BAA+BF,QAEhD,CAAC3B,EAAiBN,IAErB,OACE,6BACE,mCACA,yBAAKyC,UAAU,wBACb,+CAEE,2BACEH,KAAK,OACLI,MAAO1C,EACP2C,SAAU,SAAAC,GAAC,OAAI3C,EAAO2C,EAAEC,OAAOH,YAIrC,8BACE,0eASA,0FAC+D,IAC7D,uBAAGf,KAAK,IAAR,gBAGJ,yBAAKc,UAAU,YACb,4EAEF,yBAAKA,UAAU,sBACZrC,EACC,0BAAMqC,UAAU,WACd,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,QACb,4BAAQH,KAAK,SAASQ,QAASV,EAAaW,UAAW/C,GAAvD,gBAGA,4BAAQsC,KAAK,SAASQ,QAAStC,EAAauC,UAAW/C,GAAvD,gBAGA,2BAAOyC,UAAU,SAAjB,mBAEE,2BACEH,KAAK,WACLI,MAAM,mBACNM,QAAS1C,EACTqC,SAAU,SAAAC,GAAC,OAAIrC,EAAmBqC,EAAEC,OAAOG,cAKlD9C,GACC,4BAAQuC,UAAU,GAAGQ,IAAG,sCAAiC/C,QC5HnEgD,IAASC,OAAO,kBAAC,EAAD,MAASlC,SAASmC,eAAe,U","file":"static/js/main.cd543c86.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport \"./App.css\";\n\nconst RAPID_API_HOST = \"pdf-generator3.p.rapidapi.com\";\nconst API_URL = `https://${RAPID_API_HOST}`;\n\nconst baseHeaders = {\n  \"content-type\": \"application/json\",\n  accept: \"application/json\",\n  \"x-rapidapi-host\": RAPID_API_HOST\n};\n\nconst App = () => {\n  const [key, setKey] = useState(\"\");\n  const [pdf, setPdf] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [printBackground, setPrintBackground] = useState(false);\n\n  const downloadPdf = useCallback(() => {\n    setLoading(true);\n    fetch(`${API_URL}/html`, {\n      method: \"POST\",\n      headers: { ...baseHeaders, \"x-rapidapi-key\": key },\n      body: JSON.stringify({\n        data: document.documentElement.innerHTML.replace(\"\\n\", \"\"),\n        options: {\n          printBackground\n        }\n      })\n    })\n      .then(response => response.blob())\n      .then(response => {\n        var a = document.createElement(\"a\");\n        a.href = URL.createObjectURL(response);\n        a.setAttribute(\"download\", \"test.pdf\");\n        a.click();\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error(\"Error while downloading pdf\", err);\n      });\n  }, [printBackground, key]);\n\n  const generatePdf = useCallback(() => {\n    setLoading(true);\n    fetch(`${API_URL}/html`, {\n      method: \"POST\",\n      headers: { ...baseHeaders, \"x-rapidapi-key\": key },\n      body: JSON.stringify({\n        data: document.documentElement.innerHTML.replace(\"\\n\", \"\"),\n        options: {\n          output: {\n            type: \"base64\"\n          },\n          printBackground\n        }\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        console.log(\"pdf response\", response);\n        const {\n          response: { output }\n        } = response;\n        setPdf(output);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error(\"Error while downloading pdf\", err);\n      });\n  }, [printBackground, key]);\n\n  return (\n    <div>\n      <h1>Pdf</h1>\n      <div className=\"api-section no-print\">\n        <label>\n          RapidApi Key:\n          <input\n            type=\"text\"\n            value={key}\n            onChange={e => setKey(e.target.value)}\n          />\n        </label>\n      </div>\n      <main>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque\n          pulvinar vulputate sollicitudin. Suspendisse dictum hendrerit dictum.\n          In quis tempus tortor. Nam lacinia augue eu arcu ultrices, vitae\n          auctor est vestibulum. Praesent at volutpat sem, vitae tempus ligula.\n          Fusce feugiat auctor odio eget ullamcorper. Nullam a tortor non dolor\n          eleifend varius. Sed pellentesque in justo eu ultricies. In augue\n          tellus, auctor nec blandit nec, consequat vitae nibh.\n        </p>\n        <p>\n          You may find some more information about this argument here:{\" \"}\n          <a href=\"\">click here</a>\n        </p>\n      </main>\n      <div className=\"pdf-only\">\n        <p>This section will only be visible in the PDF</p>\n      </div>\n      <div className=\"no-print pdf-frame\">\n        {loading ? (\n          <span className=\"loading\">\n            <span className=\"loading-text\">Loading...</span>\n          </span>\n        ) : (\n          <div className=\"btns\">\n            <button type=\"button\" onClick={generatePdf} disabled={!key}>\n              Generate Pdf\n            </button>\n            <button type=\"button\" onClick={downloadPdf} disabled={!key}>\n              Download Pdf\n            </button>\n            <label className=\"check\">\n              Print background\n              <input\n                type=\"checkbox\"\n                value=\"Print background\"\n                checked={printBackground}\n                onChange={e => setPrintBackground(e.target.checked)}\n              />\n            </label>\n          </div>\n        )}\n        {pdf && (\n          <iframe className=\"\" src={`data:application/pdf;base64,${pdf}`} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}